-- Create the maelstrom database procedures and functions.
-- PostgreSQL 16

DROP FUNCTION maelstrom.select_issue_all;
CREATE OR REPLACE FUNCTION
maelstrom.select_issue_all()
RETURNS TABLE (
       iss_sysid						uuid,
       iss_identifier					varchar(16),
       iss_summary_brief				varchar(72),
       iss_summary_long					varchar(128),
       iss_problem_description		   	VARCHAR(2048),
       iss_work_around			   		VARCHAR(4096),
       iss_steps_to_reproduce		   	VARCHAR(512),
       iss_kind				   			UUID,
       iss_date_found			   		TIMESTAMP WITH TIME ZONE,
       iss_date_reported			   	TIMESTAMP WITH TIME ZONE,
       iss_date_input			   		TIMESTAMP WITH TIME ZONE,
       iss_found_by_primary			   	UUID,
       iss_found_by_team_primary		UUID,
       iss_reported_by_primary		   	UUID,
       iss_reported_by_team_primary		UUID,
       iss_input_by_primary			   	UUID,
       iss_input_by_team_primary		UUID,
       iss_severity				   		UUID,
       iss_priority				   		UUID,
       iss_organization_value		   	UUID,
       iss_current_status			   	UUID,
       iss_current_state			   	UUID,
       iss_is_resolved			   		BOOLEAN,
       iss_date_resolved			   	TIMESTAMP WITH TIME ZONE,
       iss_resolved_by_primary		   	UUID,
       iss_resolved_by_team_primary		UUID,
       iss_resolution_due_date		   	TIMESTAMP WITH TIME ZONE,
       iss_resolution_effort_unit		UUID,
       iss_resolution_effort		   	VARCHAR(10),
       iss_estimated_resolution_date	TIMESTAMP WITH TIME ZONE,
       iss_target_resolution_date		TIMESTAMP WITH TIME ZONE,
       iss_root_cause_analysis		   	VARCHAR(2048),
       iss_fix_description			   	VARCHAR(2048),
       iss_assigned_to_primary		   	UUID,
       iss_assigned_to_team_primary		UUID,
       iss_target_original_build		UUID,
       iss_estimated_original_build		UUID,
       iss_actual_original_build		UUID,
       iss_target_original_release		UUID,
       iss_estimated_original_release	UUID,
       iss_actual_original_release		UUID
)
LANGUAGE plpgsql
AS $$
BEGIN
	RETURN QUERY
	       SELECT  	sysid,
					identifier,
					summary_brief,
					summary_long,
					problem_description,
					work_around,
					steps_to_reproduce,
					kind,
					date_found,
					date_reported,
					date_input,
					found_by_primary,
					found_by_team_primary,
					reported_by_primary,
					reported_by_team_primary,
					input_by_primary,
					input_by_team_primary,
					severity,
					priority,
					organization_value,
					current_status,
					current_state,
					is_resolved,
					date_resolved,
					resolved_by_primary,
					resolved_by_team_primary,
					resolution_due_date,
					resolution_effort_unit,
					resolution_effort,
					estimated_resolution_date,
					target_resolution_date,
					root_cause_analysis,
					fix_description,
					assigned_to_primary,
					assigned_to_team_primary,
					target_original_build,
					estimated_original_build,
					actual_original_build,
					target_original_release,
					estimated_original_release,
					actual_original_release

	  	 FROM  issue;
END;
$$;


DROP FUNCTION maelstrom.select_issue_by_sysid;
CREATE OR REPLACE FUNCTION
maelstrom.select_issue_by_sysid(targ_sysid uuid)
RETURNS TABLE (
        iss_sysid						uuid,
        iss_identifier					varchar(16),
        iss_summary_brief				varchar(72),
        iss_summary_long				varchar(128),
        iss_problem_description		   	VARCHAR(2048),
        iss_work_around			   		VARCHAR(4096),
        iss_steps_to_reproduce		   	VARCHAR(512),
        iss_kind				   		UUID,
        iss_date_found			   		TIMESTAMP WITH TIME ZONE,
        iss_date_reported			   	TIMESTAMP WITH TIME ZONE,
        iss_date_input			   		TIMESTAMP WITH TIME ZONE,
        iss_found_by_primary			UUID,
        iss_found_by_team_primary		UUID,
        iss_reported_by_primary		   	UUID,
        iss_reported_by_team_primary	UUID,
        iss_input_by_primary			UUID,
        iss_input_by_team_primary		UUID,
        iss_severity				   	UUID,
        iss_priority				   	UUID,
        iss_organization_value		   	UUID,
        iss_current_status			   	UUID,
        iss_current_state			   	UUID,
        iss_is_resolved			   		BOOLEAN,
        iss_date_resolved			   	TIMESTAMP WITH TIME ZONE,
        iss_resolved_by_primary		   	UUID,
        iss_resolved_by_team_primary	UUID,
        iss_resolution_due_date		   	TIMESTAMP WITH TIME ZONE,
        iss_resolution_effort_unit		UUID,
        iss_resolution_effort		   	VARCHAR(10),
        iss_estimated_resolution_date	TIMESTAMP WITH TIME ZONE,
        iss_target_resolution_date		TIMESTAMP WITH TIME ZONE,
        iss_root_cause_analysis		   	VARCHAR(2048),
        iss_fix_description			   	VARCHAR(2048),
        iss_assigned_to_primary		   	UUID,
        iss_assigned_to_team_primary	UUID,
		iss_target_original_build		UUID,
        iss_estimated_original_build	UUID,
        iss_actual_original_build		UUID,
        iss_target_original_release		UUID,
        iss_estimated_original_release	UUID,
        iss_actual_original_release		UUID
)
LANGUAGE plpgsql
AS $$
BEGIN
	RETURN QUERY
	       SELECT	sysid,
					identifier,
					summary_brief,
					summary_long,
					iss_problem_description,
					work_around,
					steps_to_reproduce,
					kind,
					date_found,
					date_reported,
					date_input,
					found_by_primary,
					found_by_team_primary,
					reported_by_primary,
					reported_by_team_primary,
					input_by_primary,
					input_by_team_primary,
					severity,
					priority,
					organization_value,
					current_status,
					current_state,
					is_resolved,
					date_resolved,
					resolved_by_primary,
					resolved_by_team_primary,
					resolution_due_date,
					resolution_effort_unit,
					resolution_effort,
					estimated_resolution_date,
					target_resolution_date,
					root_cause_analysis,
					fix_description,
					assigned_to_primary,
					assigned_to_team_primary,
					target_original_build,
					estimated_original_build,
					actual_original_build,
					target_original_release,
					estimated_original_release,
					actual_original_release

	  	 FROM  issue
                       
	 	WHERE  sysid = targ_sysid;
END;
$$;
